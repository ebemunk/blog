<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Thinking Through the Party</title><link>https://blog.ebemunk.com/post/</link><description>Recent content in Posts on Thinking Through the Party</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 01 Sep 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.ebemunk.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Text Mining LOST</title><link>https://blog.ebemunk.com/lost-text-mining/</link><pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate><guid>https://blog.ebemunk.com/lost-text-mining/</guid><description>We&amp;rsquo;re text mining the transcripts of the TV show LOST, and visualizing them!
I wondered how much the dialogue text contributes to a TV show, and whether you would be able to &amp;ldquo;detect&amp;rdquo; things in it, looking only at the words that the characters speak, removed from how their actors looked or sounded like. How much of the writing shows through and contributes, especially in this &amp;ldquo;mass production&amp;rdquo; mentality of similar entertainment media?</description></item><item><title>A Visual Look at 2 Million Chess Games</title><link>https://blog.ebemunk.com/a-visual-look-at-2-million-chess-games/</link><pubDate>Wed, 02 Mar 2016 11:18:33 -0700</pubDate><guid>https://blog.ebemunk.com/a-visual-look-at-2-million-chess-games/</guid><description>I wanted to do something like this for a long time, and finally I think it&amp;rsquo;s at a point where I can release this into the wild.
We&amp;rsquo;ll take a look at more than 2 million games, taken from the MillionBase PGN database. I ignored any Chess960 games contained, but in total there are 2,197,113 games. I was interested to see what kind of visualizations I can do, and what patterns would be revealed by considering so many games.</description></item><item><title>Optimizing Particle Background Performance with Quadtrees</title><link>https://blog.ebemunk.com/optimizing-particle-background-performance-with-quadtrees/</link><pubDate>Thu, 21 Jan 2016 04:56:00 -0700</pubDate><guid>https://blog.ebemunk.com/optimizing-particle-background-performance-with-quadtrees/</guid><description>I have been recently looking at some Javascript libraries to make particle-based backgrounds. I found 2 promising libraries, Particleground and particles.js. Before jumping in and copy/pasting sample code, I figured I&amp;rsquo;d do some thinking of my own and see if I really need a library to achieve a simple particle background where the particles are connected by lines, depending on their distance.
So - okay, simple enough, 100% width/height canvas at the background, put out some randomly placed dots, then link the dots depending on the distance.</description></item></channel></rss>